def sol():
    dp = [-1] * (N + 1)
    dp[1] = 1
    dp[2] = 2
    for i in range(3, N + 1):
        # 미리 나눠서 메모리 초과 방지
        dp[i] = (dp[i - 1] + dp[i - 2]) % 15746
    print(dp[N])


N = int(input())

if N == 1:
    # 1일 경우 dp[2]에 할당할 수 없으므로 에러남
    print(1)
else:
    sol()

# 길이가 N인 이진 수열의 개수가 왜 피보나치 수열을 가지는지 궁금하시군요.
#
# 문제의 상황에서 맨 앞에 올 수 있는 타일은 2가지 뿐입니다.
#
# 00 타일과 1 타일.
#
# 00 타일이 올 경우 00..으로 시작하고
# 1 타일이 올 경우 1...로 시작하겠지요.
#
# 이때 '길이가 N인 이진 수열의 개수'를 f(N)이라고 정의합시다.
#
# 그러면 경우 (1)의 가짓수는 f(N-2)가 되고 경우 (2)의 가짓수는 f(N-1)이 될 것입니다.
#
# 따라서 전체 경우의 수 f(N) 은 경우 (1) 과 (2)의 가짓수의 합인
#
# f(N) = f(N-1) + f(N-2)가 됩니다.
#
# 또한 f(0) = f(1) = 1임을 확인할 수 있습니다.